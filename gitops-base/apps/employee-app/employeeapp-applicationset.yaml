apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: employeeapp-appset
  namespace: argocd
spec:
  generators:
    - git:
        # This is your IaC repo where tenant configs live:
        repoURL: https://github.com/msauhammel/ineni_pt_schuetz_iac.git
        revision: HEAD
        files:
          - path: "gitops-base/apps/employee-app/tenants/*/values.yaml"

  template:
    metadata:
      # Each tenant's Application will be named dynamically
      name: "employeeapp-{{path.basename}}"
    spec:
      project: default

      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        syncOptions:
          - CreateNamespace=true
          - ServerSideApply=true
          - PrunePropagationPolicy=foreground

      # This tells Argo CD what to deploy for each tenant:
      sources:
        - repoURL: https://github.com/msauhammel/ineni_pt_schuetz_ui.git
          targetRevision: HEAD
          path: helm/employee-frontend-chart
          helm:
            valueFiles:
              # Use the tenant-specific values from the IaC repo
              - $values/gitops-base/apps/employee-app/tenants/{{path.basename}}/values.yaml

        - repoURL: https://github.com/msauhammel/ineni_pt_schuetz_backend.git
          targetRevision: HEAD
          path: helm/department-chart
          helm:
            valueFiles:
              - $values/gitops-base/apps/employee-app/tenants/{{path.basename}}/values.yaml
            env:
              - name: spring.datasource.url
                valueFrom:
                  secretKeyRef:
                    name: pg-secret
                    key: connection_string

        # Required: link to the IaC repo to pull values.yaml dynamically
        - repoURL: https://github.com/msauhammel/ineni_pt_schuetz_iac.git
          targetRevision: HEAD
          ref: values

      # Destination: deploy each tenant in its own namespace
      destination:
        server: https://kubernetes.default.svc
        namespace: "{{path.basename}}"
---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: oauth-proxy
spec:
  generators:
    - git:
        repoURL: https://github.com/msauhammel/ineni_pt_schuetz_iac.git
        revision: HEAD
        directories:
          - path: "gitops-base/apps/employee-app/tenants/*/values.yaml"
  template:
    metadata:
      name: '{{path.basename}}-oauth2-proxy'
    spec:
      project: default
      source:
        repoURL: https://github.com/oauth2-proxy/manifests
        chart: helm/oauth2-proxy
        targetRevision: 7.6.0
        helm:
          values: |
            config:
              clientID: '{{path.basename}}-client-id'
              clientSecret: '{{path.basename}}-client-secret'
              cookieSecret: '{{path.basename}}-cookie-secret'
              provider: google
              redirectURL: 'https://{{path.basename}}.yourdomain.com/oauth2/callback'
              emailDomains:
                - "*"
              upstreams:
                - http://{{path.basename}}-employee-app.{{path.basename}}-employee-app.svc.cluster.local:80

            service:
              type: LoadBalancer  # âœ… public entry

      destination:
        server: https://kubernetes.default.svc
        namespace: '{{path.basename}}-employee-app'

      syncPolicy:
        automated: {}
        syncOptions:
          - CreateNamespace=true